---
name: CI/CD Pipeline (Simplified)

on:
  push:
    branches: [master, develop, 'copilot/**', 'feature/**', 'hotfix/**']
  pull_request:
    branches: [master, develop]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true"
  JAVA_OPTS: "-Xmx2g"

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Suite
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test with Gradle
        timeout-minutes: 20
        run: |
          cd "Don't look back"
          # Set up headless environment for OpenGL
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3

          # Build the project (includes compiling source and test code)
          gradle build --no-daemon

      - name: Run Gradle test target
        timeout-minutes: 10
        run: |
          cd "Don't look back"
          gradle test --no-daemon

  build-validation:
    runs-on: ubuntu-latest
    name: Build Validation
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run build validation script
        timeout-minutes: 20
        run: |
          ./validate-build.sh

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: [build-validation]
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    name: Build Artifacts
    needs: [test, build-validation]
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build fat JAR
        timeout-minutes: 15
        run: |
          cd "Don't look back"
          gradle fatJar --no-daemon

      - name: Create cross-platform distribution
        timeout-minutes: 10
        run: |
          cd "Don't look back"
          gradle createCrossPlatformDistribution --no-daemon

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: dont-look-back-jar-${{ github.run_number }}
          path: "Don't look back/app/build/libs/DontLookBack-1.0-fat.jar"
          retention-days: 30

      - name: Upload cross-platform distribution
        uses: actions/upload-artifact@v4
        with:
          name: dont-look-back-cross-platform-${{ github.run_number }}
          path: "Don't look back/app/build/distributions/cross-platform/"
          retention-days: 30

  notification:
    runs-on: ubuntu-latest
    name: Build Notification
    needs: [test, build-validation, build, security-scan]
    if: always()
    timeout-minutes: 10

    steps:
      - name: Build Status Summary
        run: |
          echo "=== Build Summary ==="
          echo "Test Status: ${{ needs.test.result }}"
          echo "Build Validation Status: ${{ needs.build-validation.result }}"
          echo "Build Status: ${{ needs.build.result }}"
          echo "Security Scan Status: ${{ needs.security-scan.result }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Build Number: ${{ github.run_number }}"

          # Determine overall build status
          if [[ "${{ needs.test.result }}" == "success" && "${{ needs.build-validation.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "âœ… Core build completed successfully!"
          else
            echo "::error::Core build failed!"
            exit 1
          fi